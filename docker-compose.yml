services:
  api:
    container_name: api
    restart: always
    build:
      context: .
    ports:
      - 8000:8000
    environment:
      - MONGO_ALIAS=${MONGODB_ALIAS}
      - MONGO_URI=${MONGODB_URI}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - "app:/data/app"
  cache:
    image: redis:6.2.11
    container_name: cache
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 60 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - "cache:/data/cache"
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
  mongodb:
    image: mongo:latest
    container_name: db
    restart: always
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
    volumes:
      - "mongodb_data:/data/db"
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

volumes:
  app:
  cache:
  mongodb_data: